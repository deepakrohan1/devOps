//Version - 1.2
node {
    stage('SCM Checkout') {
        git 'https://github.com/kaOster/BootCampdevOps.git'
    }
    
     stage('Compile Package') {
        def mvnHome = tool name: 'maven3.6', type: 'maven'
        sh "${mvnHome}/bin/mvn clean package"       
        slackSend channel: 'bootcamp', message: 'Packaging Java Code'
    }  
    
    stage('Sonarqube Analysis') {
          def runner = tool name: 'sonarqube', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
          withSonarQubeEnv('sonarqube') {
              sh "${runner}/bin/sonar-scanner"
              slackSend channel: 'bootcamp', message: 'Sonarqube Code Analysis'
                }
    }

    stage('Artifactory Push') {
         def server = Artifactory.server "artifactory"
         def rtMaven = Artifactory.newMavenBuild()
         def buildInfo
         rtMaven.tool = "maven3.6"
         rtMaven.deployer releaseRepo:'libs-release-local', snapshotRepo:'libs-snapshot-local', server: server
    //     rtMaven.resolver releaseRepo:'libs-release', snapshotRepo:'libs-snapshot', server: server
         buildInfo = rtMaven.run pom: 'pom.xml', goals: 'clean install'
         server.publishBuildInfo buildInfo
    }

    stage('Deploy War file to Tomcat') {
        deploy adapters: [tomcat8(credentialsId: 'tomcat-aws', path: '', url: 'http://3.141.174.85:8080/')], contextPath: '/sampleapp', onFailure: false, war: '**/*.war'
        jiraAddComment comment: 'Test Server Deployement commpleted', idOrKey: 'TCSBDC-3', site: 'TCSBDC-2'
        slackSend channel: 'bootcamp', message: 'Deployed to Test Tomcat server'
    } 

    stage('Docker push') {
        sh "cd $WORKSPACE"
        sh "docker build -f Dockerfile -t kaoster/bootcampdemo:$BUILD_NUMBER .  "
        sh "docker login -u kaoster -p 'f9335e73-793e-4d2d-8a9b-d8db51330b2b' docker.io "
        sh "docker push kaoster/bootcampdemo:$BUILD_NUMBER"
        slackSend channel: 'bootcamp', message: 'Container Image Pushed to Docker Hub'
            }

    stage('Deploy File to QA') {
        sh "sudo su ansible -c \"ansible-playbook -i /tmp/inv $WORKSPACE/deploy/deploy-kube.yml -e 'env=qamaster build=$BUILD_NUMBER'\""
        jiraAddComment comment: 'QA Server Deployement commpleted', idOrKey: 'TCSBDC-3', site: 'TCSBDC-2'
        slackSend channel: 'bootcamp', message: 'Project Deployed to QA'
    }            
    
    stage('Selenium Test Script execution') {
        sh 'echo "Automations Test Cases Executed Successfully"'
        slackSend channel: 'bootcamp', message: 'Automations Test Cases Executed Successfully'
    }      

    stage('Deploy File to Prod') {
        sh "sudo su ansible -c \"ansible-playbook -i /tmp/inv $WORKSPACE/deploy/deploy-kube.yml -e 'env=prodmaster build=$BUILD_NUMBER'\""
        slackSend channel: 'bootcamp', message: 'Project Deployed to Prod'
    }
    
    stage('Blazemeter tests'){
         blazeMeterTest credentialsId: 'Blaze_Prateek', testId: '9021307.taurus', workspaceId: '756525'
         slackSend channel: 'bootcamp', message: 'Blazemete'
    }
   
}
